{"version":3,"sources":["defaultPrefs.js","actions/loginAction.js","actions/gotPrefsAction.js","Firebase.js","store.js","Result.js","Results.js","Languages.js","Prefs.js","Landing.js","Wikipedia.js","SearchBar.js","Welcome.js","Login.js","Signup.js","Profile.js","TopBar.js","App.js","serviceWorker.js","index.js"],"names":["defaultPrefs","src","target","loginAction","user","type","payload","gotPrefsAction","prefs","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","defaultUserState","Firebase","_this","this","Object","classCallCheck","createUser","email","pass","auth","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","signInAnonymously","logOut","signOut","resetPass","sendPasswordResetEmail","updatePass","newPass","currentUser","updatePassword","getPrefs","db","ref","uid","once","setPrefs","newPrefs","console","log","update","translate","text","source","params","functions","httpsCallable","app","initializeApp","database","window","userState","unsub","onAuthStateChanged","store","dispatch","then","res","val","createStore","state","action","objectSpread2","firebase","Result","props","possibleConstructorReturn","getPrototypeOf","call","cachedTranslation","showTranslation","event","_this2","setState","data","t","JSON","parse","catch","error","Tag","concat","tag","toLowerCase","react_default","a","createElement","className","onClick","bind","React","Component","connect","ownProps","Results","items","map","item","index","key","src_Result","languages","full","abbr","Prefs","_props$priorPrefs","priorPrefs","invalid","save","_this$setState","value","changed","name","other","defineProperty","onChange","change","lang","i","disabled","cancel","Landing","react_router_dom","to","Wikipedia","term","searchWiki","response","json","wikiResponseToHtml","wikiHtmlToArray","fetch","page","keys","html","document","innerHTML","Array","from","children","filter","n","nodeName","toUpperCase","innerText","length","SearchBar","results","preventDefault","getWikiArray","arr","showPrefs","id","onSubmit","handleSubmit","handleChange","clear","hidePrefs","src_Prefs","changePrefs","src_Results","src_Landing","oldProps","withRouter","history","push","LoginForm","welcome","setLogin","_this3","src_Welcome","submit","message","guestLogin","Connected","Login","SignupForm","SignupPage","disp","doLogout","react_router","exact","path","component","Profile","Signup","App","src_TopBar","Boolean","location","hostname","match","ReactDOM","render","es","configureStore","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fcd3872.chunk.js","sourcesContent":["let defaultPrefs = {src:\"es\",target:\"en\"};\nexport default defaultPrefs;\n","let loginAction = (user) => ({type: 'LOGIN_ACTION', payload: user});\n\nexport default loginAction;\n","let gotPrefsAction = (prefs) => ({type: 'GOT_PREFS', prefs: prefs});\n\nexport default gotPrefsAction;\n","import app from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/functions';\nimport defaultPrefs from './defaultPrefs';\nimport store from './store';\nimport loginAction from './actions/loginAction';\nimport gotPrefsAction from './actions/gotPrefsAction';\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA-nW21JGoMUfz5JyI5cFQiJL8_9etUXBw\",\n    authDomain: \"react-language.firebaseapp.com\",\n    databaseURL: \"https://react-language.firebaseio.com\",\n    projectId: \"react-language\",\n    storageBucket: \"\",\n    messagingSenderId: \"624932585997\",\n    appId: \"1:624932585997:web:14319ed2f1ff3514\"\n};\n\nlet defaultUserState = {prefs: defaultPrefs}\nclass Firebase {\n\t// stateChange is a funciton called whenever a successful login/out occurs\n\tconstructor() {\n\t\tapp.initializeApp(firebaseConfig);\n\t\tthis.auth = app.auth();\n\t\tthis.db = app.database();\n\t\tthis.functions = app.functions();\n\t\twindow.auth=this.auth;\n\t\tthis.userState = defaultUserState;\n\t\tthis.unsub = this.auth.onAuthStateChanged(user=>{\n\t\t\tif (user) {\n\t\t\t\tstore.dispatch(loginAction(user.email));\n\t\t\t\tthis.getPrefs().then(res=>{\n\t\t\t\t\tlet prefs = res.val();\n\t\t\t\t\tif (prefs) {\n\t\t\t\t\t\tstore.dispatch(gotPrefsAction( prefs ));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.unsub(); //unsubscribe to auth change - only want this to run once \n\t\t});\n\t}\n\n\temail() {\n\t\treturn this.auth.currentUser ? this.auth.currentUser.email : null;\n\t}\n\n\tcreateUser = (email, pass) => {\n\t\treturn this.auth.createUserWithEmailAndPassword(email,pass);\n\t}\n\n\tlogin = (email, pass)=> {\n\t\tif (!email || !pass) {\n\t\t\treturn this.auth.signInAnonymously();\n\t\t}\n\t\treturn this.auth.signInWithEmailAndPassword(email, pass);\n\t}\n\n\tlogOut = ()=> {\n\t\treturn this.auth.signOut();\n\t}\n\n\tresetPass = (email) => {\n\t\treturn this.auth.sendPasswordResetEmail(email);\n\t}\n\n\tupdatePass = (newPass) => {\n\t    return this.auth.currentUser.updatePassword(newPass);\n\t}\n\tgetPrefs = () => {\n\t\tif (!this.auth.currentUser) return null;\n\t\treturn this.db.ref('/users/' + this.auth.currentUser.uid + '/prefs').once('value');\n\t}\n\tsetPrefs = (newPrefs) => {\n\t\tif (!this.auth.currentUser) return null;\n\t\tlet prefs = this.db.ref('/users/' + this.auth.currentUser.uid + '/prefs');\n        console.log(newPrefs);\n\t\tprefs.update(newPrefs);\n\t}\n\ttranslate = (text, source, target) => {\n\t\tlet params = {text: text, source:source, target:target};\n\t\treturn this.functions.httpsCallable('translate')(params);\n\t}\n}\n\nexport default Firebase;\n","import { createStore } from 'redux';\nimport Firebase from './Firebase';\nimport defaultPrefs from './defaultPrefs';\n//import rootReducer from './reducers/rootReducer';\n\nfunction mainReducer(state, action) {\n\tconsole.log(\"Responding to: \");\n\tconsole.log(action);\n\tswitch (action.type) {\n\t\tcase 'LOGIN_ACTION':\n\t\t\treturn {...state, user:action.payload}\n\t\tcase 'LOGOUT_ACTION':\n\t\t\treturn {...state, user:null}\n\t\tcase 'GOT_PREFS':\n\t\t\tconsole.log(\"got prefs:\" + action.prefs);\n\t\t\treturn {...state, prefs:action.prefs}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nfunction defaultState() {\n\treturn {\n\t\tuser: null,\n\t\tprefs: defaultPrefs,\n\t\tfirebase: new Firebase()\n\t}\n}\nexport default createStore(\n  mainReducer,\n  defaultState() );\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nclass Result extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {cachedTranslation: null, showTranslation:false};\n\t}\n\n\ttranslate(event) {\n\t\tthis.setState({showTranslation: !this.state.showTranslation});\n\t\tlet msg = \"Please log in to view translations. If you are already logged in, this is an error.\";\n\t\tthis.props.firebase.translate(this.props.data.text, this.props.prefs.src,this.props.prefs.target)\n\t\t.then(t=>JSON.parse(t.data))\n\t\t.then(t => t['text'][0])\n\t\t.then(t => {\n\t\t\tthis.setState({cachedTranslation: t});\n\t\t})\n\t\t.catch(error=>{\n\t\t\tconsole.log(\"translation error\");\n\t\t\tconsole.log(error);\n\t\t\tthis.setState({cachedTranslation: msg});\n\t\t})\n\t}\n\trender() {\n\t\tlet Tag = `${this.props.data.tag.toLowerCase()}`;\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-6\">\n\t\t\t\t\t<Tag>{this.props.data.text}</Tag>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-1\">\n\t\t\t\t\t<button onClick={this.translate.bind(this)}>\n\t\t\t\t\t\t{this.state.showTranslation? \"hide\" : \"translate\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-4\">\n\t\t\t\t\t{\n\t\t\t\t\t\t(!this.state.showTranslation)? null \n\t\t\t\t\t\t: (this.state.cachedTranslation || \"fetching... \")\n\t\t\t\t\t} \n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\t\nfunction mstp(state, ownProps) {\n\treturn {firebase:state.firebase};\n}\nexport default connect(mstp)(Result);\n","import React from 'react';\nimport Result from './Result';\n\n//TODO: UUID key or terrm+index key or something\nfunction Results(props) {\n\treturn (!props.items)? null : \n\t( \n\t\t<ul className=\"list-group\">\n\t\t{props.items.map((item,index) => \n\t\t\t<li key={index} className=\"list-group-item\">\n\t\t\t\t<Result prefs={props.prefs} data={item} />\n\t\t\t</li>\n\t\t)}\n\t\t</ul>\n\t);\n}\n\nexport default Results;","var languages = [\n\t{full:\"English\", abbr:\"en\"},\n\t{full:\"Spanish\", abbr:\"es\"},\n\t{full:\"French\", abbr:\"fr\"},\n\t{full:\"German\", abbr:\"de\"},\n\t{full:\"Italian\", abbr:\"it\"},\n\t{full:\"Portuguese\", abbr:\"pt\"}\n];\nexport default languages;","import React from 'react';\nimport languages from './Languages';\n\nlet msg = \"Please select a different source and target language!\";\n\n// The state for this component is the current selection\n// maintained temporarily while prefs form open \n// chhanges only apply when saved\nclass Prefs extends React.Component {\n\tconstructor(props){\n\t\tconsole.log(props);\n\t\tsuper(props);\n\t\t// set component state to prior preferences\n\t\tvar {src,target} = props.priorPrefs;\n\t\tthis.state = {src:src,target:target, invalid:false};\n\t}\n\n\tsave() {\n\t\tthis.props.save({src:this.state.src, target:this.state.target});\n\t}\n\n    change(event) {\n        let val = event.target.value;\n        let changed = event.target.name;\n        let other = changed==='src'?'target':'src';\n        this.setState( { \n            [changed]: val, \n            invalid: (val===this.state[other])\n        });\n    }\n\tcancel() {\n\t\tthis.props.save(null);\n\t}\n\trender() {\n\t\treturn  (\n\t\t\t<div className=\"form-group col-6\">\n\t\t\t\t<label> Goal Language (articles will appear in this language):</label>\n\t\t\t\t<select value={this.state.src} onChange={this.change.bind(this)} className=\"form-control\" name=\"src\">\n\t\t\t\t\t{languages.map((lang,i) =>  (\n\t\t\t\t\t\t<option key={i} value={lang.abbr}>\n\t\t\t\t\t\t\t \t{lang.full}\n\t\t\t\t\t \t</option>)\n\t\t\t\t\t)}\n\t\t\t\t</select>\n\n\t\t\t\t<label > Home Language (articles will be translated into this language):</label>\n\t\t\t\t<select value={this.state.target} onChange={this.change.bind(this)} className=\"form-control\" name=\"target\">\n\t\t\t\t\t{languages.map((lang,i) =>  (\n\t\t\t\t\t\t<option key={i} value={lang.abbr}>\n\t\t\t\t\t\t\t \t{lang.full}\n\t\t\t\t\t \t</option>)\n\t\t\t\t\t)}\n\t\t\t\t</select>\n\n\t\t\t\t<button disabled={this.state.invalid} onClick={this.save.bind(this)}>save</button>\n\t\t\t\t<button onClick={this.cancel.bind(this)}>cancel</button>\n\t\t\t\t{this.state.invalid? <p>{msg}</p> : null}\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default Prefs;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n/*\nTODO\nExplain purpose & scope of app\nDemo obvious functionality? e.g. pre-loaded article w/ lang dropdowns\n*/\nlet Landing = ()=>(\n\t  <div className=\"container-fluid landing\">\n\t    <div className=\"row\">\n      \t\t<div className=\"col-lg-6\">\n\t\t\t\t<h3>\n\t\t\t\t\tLingBash is a language learning tool!\n\t\t\t\t</h3>\n\t\t\t\t<p>\n\t\t\t\t\tDesigned to help users with vocabulary and reading comprehension, LingBash allows users to read wikipedia articles in your goal language without viewing translations.\n\t\t\t\t\tThe articles are displayed section-by-section. If you reach a section you don't fully understand, you can view a translation into your native language.\n\t\t\t\t\tTry to read as much as you can without translating!\n\t\t\t\t</p>\n\n\n\t\t\t\t<p>\n\t\t\t\t\tThis demo page provides a preview of it's core functionality.\n\t\t\t\t\tTo view translations, you must first <Link to='/login'> Log In </Link> or continue as a guest (available on Login page).\n\t\t\t\t\tThen, continue to the <Link to='/search'> Search </Link> page.\n\t\t\t\t\tUse the 'show preferences' menu select your goal language (the language you are learning) and your home language.\n\t\t\t\t</p>\n\t\t\t\t<p>\n\t\t\t\t\tFinally, simply search for articles in your goal language!\n\t\t\t\t</p>\n      </div>\n    </div>\n  </div>\n\n\t);\nexport default Landing;","class Wikipedia {\n\n\tstatic getWikiArray(term, lang) {\n\t\treturn this.searchWiki(term, lang)\n\t\t.then(response=>response.json())\n\t\t.then(this.wikiResponseToHtml)\n\t\t.then(this.wikiHtmlToArray);\n\t}\n\n\tstatic searchWiki(term, lang) {\n\t    var url = \"https://\" + lang \n\t    + \".wikipedia.org/w/api.php?action=query&prop=extracts&format=json&origin=*&titles=\"\n\t    + term;\n\t    return fetch(url);\n\t}\n\n\tstatic wikiResponseToHtml(response) {\n\t    try {\n\t        let page = response['query']['pages'];\n\t        let res =  page[Object.keys(page)[0]]['extract'];\n\t\t\treturn res;\n\t    }\n\t    catch (error) {return null;}\n\t}\n\n\tstatic wikiHtmlToArray(html) {\n\t    if (!html) return;\n\t    let page = document.createElement('div');\n\t    page.innerHTML = html;\n\t    return Array.from(page.children)\n\t        .filter(n => n.nodeName === \"P\" || n.nodeName[0].toUpperCase()===\"H\")\n\t        .filter(n => n.innerText.length > 2)\n\t        .map(n => ({tag:n.nodeName, text:n.innerText /*, html:n.innerHTML */ }) );\n\t}\n}\nexport default Wikipedia;\n","import React from 'react';\nimport Results from \"./Results\";\nimport Prefs from \"./Prefs\";\nimport Landing from \"./Landing\";\nimport {connect} from 'react-redux';\nimport store from './store';\nimport gotPrefsAction from './actions/gotPrefsAction';\nimport Wikipedia from './Wikipedia'\n\n\nclass SearchBar extends React.Component {\n    // this.state has 'value' tied real-time to search bar, 'term' on submission\n    constructor(props) {\n        super(props);\n        this.state = {\n            value:\"\", \n            term:\"\", \n            results: []}\n    }\n\n    componentDidMount() {\n        console.log(\"mounted\");\n    }\n\n    // suggestions eventually go here\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    // any processing to final search term goes here\n    handleSubmit(event) {\n        event.preventDefault();\n        Wikipedia.getWikiArray(this.state.value, this.props.prefs.src)\n            .then(arr => this.setState({results: arr}));\n    }\n\n    clear(event) {\n        event.preventDefault();\n        this.setState({results:[]});\n    }\n\n    hidePrefs(event){\n        event.preventDefault();\n        this.setState({showPrefs:false});\n    }\n\n    showPrefs(event){\n        event.preventDefault();\n        this.setState({showPrefs:true});\n    }\n\n    // changing hides prefs window\n    // pass it 'null' from Prefs to hide without change\n    // TODO is that bad?\n    changePrefs(newPrefs) {\n        if (newPrefs) {\n            // clear results on successful prefs change\n            this.setState({results:[]});\n            this.setState({showPrefs:false});\n            store.dispatch(gotPrefsAction(newPrefs));\n            this.props.firebase.setPrefs(newPrefs);\n        }\n        else {\n            this.setState({showPrefs:false});\n        }\n    }\n\n    render() {\n        //console.log(this.state.results);\n        return (\n            <div id=\"wrap\">\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <form onSubmit = {this.handleSubmit.bind(this)} >\n                        <label>\n                            Search:\n                            <input type=\"text\" value={this.state.value} onChange={this.handleChange.bind(this)}  />\n                        </label>\n                        <input type=\"submit\" value=\"Submit\" />\n                        <button onClick={this.clear.bind(this)} >clear</button>\n                        {this.state.showPrefs?\n                            <button onClick={this.hidePrefs.bind(this)}>Hide Preferences</button> \n                        : \n                            <button onClick={this.showPrefs.bind(this)}>Show Preferences</button>\n                        }\n                        {\n                            this.props.user? \n                            <span> Hello, {this.props.user.email || \"anonymous\"}! </span>\n                            :<span>Logged out</span>\n                        }\n                    </form>\n                </nav>\n                {this.state.showPrefs ? \n                    <Prefs save={this.changePrefs.bind(this)} priorPrefs={this.props.prefs}/> \n                    : null\n                }\n                <Results prefs={this.props.prefs} items={this.state.results} />\n                {this.state.results && this.state.results.length>0? null : <Landing />}\n            </div>\n        );\n    }\n}\nfunction mstp(state, oldProps) {\n    return {...oldProps, firebase:state.firebase, user:state.user, prefs:state.prefs};\n}\nexport default connect(mstp)(SearchBar);\n","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport Prefs from './Prefs';\nimport store from './store';\nimport gotPrefsAction from './actions/gotPrefsAction';\nimport defaultPrefs from './defaultPrefs';\nimport {connect} from 'react-redux';\nlet Welcome = (props) => (\n\t<div>\n\t\t<p>Welcome to LingBash! Please select a goal language and a home language to get started.</p>\n\t<Prefs priorPrefs={defaultPrefs} save={ (newPrefs)=> {\n        store.dispatch(gotPrefsAction(newPrefs));\n        props.firebase.setPrefs(newPrefs);\n        props.history.push('/search');\n\t}} />\n\t</div> \n)\nfunction mstp(state, oldProps) {\n    return {...oldProps, firebase:state.firebase};\n}\nexport default withRouter(connect(mstp)(Welcome));","import React from 'react';\nimport {Link, withRouter} from 'react-router-dom';\nimport loginAction from './actions/loginAction';\nimport {connect} from 'react-redux';\nimport store from './store';\nimport gotPrefsAction from './actions/gotPrefsAction';\nimport Welcome from './Welcome';\n\nclass LoginForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\", error:null, welcome:false};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tthis.props.firebase.login(this.state.email, this.state.pass)\n\t\t\t.then(res=>{\n\t\t\t\tthis.setState({email:\"\",pass:\"\"});\n\t\t\t\tthis.props.history.push(\"/home\");\t\n\t\t\t\tthis.props.setLogin(res.user);\n\t\t\t\tthis.props.firebase.getPrefs().then(res=>{\n\t\t\t\t\tstore.dispatch(gotPrefsAction( res.val() ));\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(error=>{\n\t\t\t\tthis.setState({error:error});\n\t\t\t});\n\t}\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\tguestLogin() {\n\t\tthis.props.firebase.login(null,null).then(res=>{\n\t\t\tthis.props.setLogin(res.user);\n\t\t\tthis.setState({email:\"\",pass:\"\", welcome:true});\n\t\t});\n\t}\n\trender() {\n\t\tif (!this.state.welcome) {\n\t\t\treturn (\n\t\t\t<div>\n\t\t\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t\t\t<label> Email: </label>\n\t\t\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t\t\t<label> Password: </label>\n\t\t\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t\t\t{this.state.error? <p>{this.state.error.message}</p> : null }\n\t\t\t\t\t<p>Don't have an account? <Link to='/signup'> Sign Up! </Link></p>\n\t\t\t\t\t<button type=\"button\" className=\"form-control\" onClick={this.guestLogin.bind(this)}>Continue as Guest</button>\n\t\t\t\t</form>\n\t\t\t</div>);\n\t\t}\n\t\telse {\n\t\t\treturn <Welcome /> \n\t\t}\n\t}\n}\nlet mapStateToProps = function(state) {return {...state}};\nlet mapDispatchToProps = function(dispatch) {\n\treturn {\n\t\tsetLogin : name => dispatch(loginAction(name))\n\t};\n}\nlet Connected = connect(mapStateToProps, mapDispatchToProps)(LoginForm);\nconst Login = withRouter(Connected);\nexport default Login;","import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport Welcome from './Welcome';\nimport loginAction from './actions/loginAction';\nclass SignupForm extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {email:\"\", pass:\"\"};\n\t}\n\tsubmit(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"submit\");\n\t\tconsole.log(this.props.firebase);\n\t\tthis.props.firebase\n\t\t\t.createUser(this.state.email, this.state.pass)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.props.setLogin(res.user);\n\t\t\t\t\tthis.props.firebase.setPrefs(this.props.prefs);\n\t\t\t\t\tthis.setState({welcome:true});\n\t\t\t\t\t//this.props.history.push(\"/home\");\n\t\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\t\tthis.setState({ error });\n\t\t\t\t});\n\t}\n\tchange(event) {\n\t\tthis.setState({[event.target.name]:event.target.value});\n\t}\n\trender() {\n\t\tif (!this.state.welcome) {\n\t\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t<h3 className=\"col-sm-6 text-center\">Register New Account</h3>\n\t\t\t\t</div> \n\t\t\t\t<form className=\"form-group col-6\" onSubmit={this.submit.bind(this)}>\n\t\t\t\t\t<label> Email: </label>\n\t\t\t\t\t<input name=\"email\" className=\"form-control\" value={this.state.email} onChange={this.change.bind(this)}/>\n\t\t\t\t\t<label> Password: </label>\n\t\t\t\t\t<input type=\"password\" name=\"pass\" className=\"form-control\" value={this.state.pass} onChange={this.change.bind(this)}/>\n\t\t\t\t\t<p></p>\n\t\t\t\t\t<button className=\"form-control\">submit</button>\n\t\t\t\t</form>\n\t\t\t\t{this.state.error? \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h5>error!</h5>\n\t\t\t\t\t\t{this.state.error.message}\n\t\t\t\t\t</div> \n\t\t\t\t: null}\n\t\t\t</div>);\n\t\t}\n\t\telse {\n\t\t\treturn <Welcome />\n\t\t}\n\t}\n}\n\nconst SignupPage = withRouter(SignupForm);\nlet mdtp = function(dispatch) {\n\treturn {\n\t\tsetLogin : name => dispatch(loginAction(name))\n\t};\n}\nlet mstp = (state) => ({firebase:state.firebase, prefs:state.prefs});\nexport default connect(mstp, mdtp)(SignupPage);\n","import React from 'react';\nimport {connect} from 'react-redux';\nlet Profile = (props)=>(\n\t<div>\n\t\t<p>This is the profile page. Welcome.</p>\n\t</div>\n\t);\nlet mstp = state => {\n\tconsole.log(\"Drawing profile with state:\");\n\tconsole.log(state);\n\treturn {};\n}\nexport default connect(mstp)(Profile);","import React from 'react';\nimport {Link, Route} from 'react-router-dom';\nimport SearchBar from './SearchBar';\nimport Landing from './Landing';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Profile from './Profile';\nimport {connect} from 'react-redux';\n\nlet TopBar = props=> (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n\t\t\t\t\t<Link to={'/'}>\n\t\t\t\t\t\t<button className=\"btn btn-primary\">Home</button>\n\t\t\t\t\t</Link>\n\n\t\t\t\t\t<Link to={'/search'}>\n\t\t\t\t\t\t<button className=\"btn btn-primary\">Search</button>\n\t\t\t\t\t</Link>\n\t\t\t\t\t{props.user? \n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-primary\" \n\t\t\t\t\t\t\tonClick={()=> {props.firebase.logOut(); props.doLogout();} }>\n\t\t\t\t\t\t\tLog Out\n\t\t\t\t\t\t</button>\n\t\t\t\t\t: null }\n\n\t\t\t\t\t{ \n\t\t\t\t\t\t/*|| props.user?\n\t\t\t\t\t\t<Link to={'/profile'}>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Profile</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t: null */ }\n\n\t\t\t\t\t{!props.user? \n\t\t\t\t\t\t<Link to={'/login'}>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Log In</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t: null }\n\n\t\t\t\t\t{!props.user? \n\t\t\t\t\t\t<Link to={'/signup'}>\n\t\t\t\t\t\t\t<button className=\"btn btn-primary\">Sign Up</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t:null }\n\t\t\t\t\t}\n\n\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<Route exact path='/' component = {Landing} />\n\t\t\t\t<Route path='/search' component = {SearchBar} />\n\t\t\t\t<Route path='/login' component = {Login} />\n\t\t\t\t<Route path='/profile' component = {Profile} />\n\t\t\t\t<Route path='/signup' component = {Signup} />\n\t\t\t</div>\n\t\t);\nfunction mstp(state, ownProps) {\n\treturn {user: state.user, firebase:state.firebase};\n}\nfunction mdtp(disp) {\n\treturn {\n\t\tdoLogout: ()=>disp({type:'LOGOUT_ACTION'})\n\t}\n}\nexport default connect(mstp,mdtp)(TopBar);\n\n\n","import React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\n//import logo from './logo.svg';\nimport './App.css';\nimport TopBar from './TopBar';\n\nclass App extends React.Component {\n\trender() {\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<TopBar/>\n\t\t\t</Router>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport configureStore from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n\t\t\t<Provider store={configureStore}>\n\t\t\t\t<App/>\n\t\t\t</Provider>,\n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}